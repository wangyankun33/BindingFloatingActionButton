//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Github.Clans.Fab {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']"
	[global::Android.Runtime.Register ("com/github/clans/fab/FloatingActionButton", DoNotGenerateAcw=true)]
	public partial class FloatingActionButton : global::Android.Widget.ImageButton {
		// Metadata.xml XPath field reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/field[@name='SIZE_MINI']"
		[Register ("SIZE_MINI")]
		public const int SizeMini = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/field[@name='SIZE_NORMAL']"
		[Register ("SIZE_NORMAL")]
		public const int SizeNormal = (int) 0;

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/github/clans/fab/FloatingActionButton", typeof (FloatingActionButton));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected FloatingActionButton (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/constructor[@name='FloatingActionButton' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register (".ctor", "(Landroid/content/Context;)V", "")]
		public unsafe FloatingActionButton (global::Android.Content.Context context) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Landroid/content/Context;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (context);
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/constructor[@name='FloatingActionButton' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet']]"
		[Register (".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
		public unsafe FloatingActionButton (global::Android.Content.Context context, global::Android.Util.IAttributeSet attrs) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Landroid/content/Context;Landroid/util/AttributeSet;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue ((attrs == null) ? IntPtr.Zero : ((global::Java.Lang.Object) attrs).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (context);
				global::System.GC.KeepAlive (attrs);
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/constructor[@name='FloatingActionButton' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet'] and parameter[3][@type='int']]"
		[Register (".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
		public unsafe FloatingActionButton (global::Android.Content.Context context, global::Android.Util.IAttributeSet attrs, int defStyleAttr) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Landroid/content/Context;Landroid/util/AttributeSet;I)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue ((attrs == null) ? IntPtr.Zero : ((global::Java.Lang.Object) attrs).Handle);
				__args [2] = new JniArgumentValue (defStyleAttr);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (context);
				global::System.GC.KeepAlive (attrs);
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/constructor[@name='FloatingActionButton' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
		[Register (".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;II)V", "")]
		public unsafe FloatingActionButton (global::Android.Content.Context context, global::Android.Util.IAttributeSet attrs, int defStyleAttr, int defStyleRes) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Landroid/content/Context;Landroid/util/AttributeSet;II)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue ((attrs == null) ? IntPtr.Zero : ((global::Java.Lang.Object) attrs).Handle);
				__args [2] = new JniArgumentValue (defStyleAttr);
				__args [3] = new JniArgumentValue (defStyleRes);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (context);
				global::System.GC.KeepAlive (attrs);
			}
		}

		static Delegate cb_getButtonSize;
#pragma warning disable 0169
		static Delegate GetGetButtonSizeHandler ()
		{
			if (cb_getButtonSize == null)
				cb_getButtonSize = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetButtonSize));
			return cb_getButtonSize;
		}

		static int n_GetButtonSize (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.ButtonSize;
		}
#pragma warning restore 0169

		static Delegate cb_setButtonSize_I;
#pragma warning disable 0169
		static Delegate GetSetButtonSize_IHandler ()
		{
			if (cb_setButtonSize_I == null)
				cb_setButtonSize_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetButtonSize_I));
			return cb_setButtonSize_I;
		}

		static void n_SetButtonSize_I (IntPtr jnienv, IntPtr native__this, int size)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.ButtonSize = size;
		}
#pragma warning restore 0169

		public virtual unsafe int ButtonSize {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='getButtonSize' and count(parameter)=0]"
			[Register ("getButtonSize", "()I", "GetGetButtonSizeHandler")]
			get {
				const string __id = "getButtonSize.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setButtonSize' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setButtonSize", "(I)V", "GetSetButtonSize_IHandler")]
			set {
				const string __id = "setButtonSize.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate cb_getColorDisabled;
#pragma warning disable 0169
		static Delegate GetGetColorDisabledHandler ()
		{
			if (cb_getColorDisabled == null)
				cb_getColorDisabled = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetColorDisabled));
			return cb_getColorDisabled;
		}

		static int n_GetColorDisabled (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.ColorDisabled;
		}
#pragma warning restore 0169

		static Delegate cb_setColorDisabled_I;
#pragma warning disable 0169
		static Delegate GetSetColorDisabled_IHandler ()
		{
			if (cb_setColorDisabled_I == null)
				cb_setColorDisabled_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetColorDisabled_I));
			return cb_setColorDisabled_I;
		}

		static void n_SetColorDisabled_I (IntPtr jnienv, IntPtr native__this, int color)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.ColorDisabled = color;
		}
#pragma warning restore 0169

		public virtual unsafe int ColorDisabled {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='getColorDisabled' and count(parameter)=0]"
			[Register ("getColorDisabled", "()I", "GetGetColorDisabledHandler")]
			get {
				const string __id = "getColorDisabled.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setColorDisabled' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setColorDisabled", "(I)V", "GetSetColorDisabled_IHandler")]
			set {
				const string __id = "setColorDisabled.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate cb_getColorNormal;
#pragma warning disable 0169
		static Delegate GetGetColorNormalHandler ()
		{
			if (cb_getColorNormal == null)
				cb_getColorNormal = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetColorNormal));
			return cb_getColorNormal;
		}

		static int n_GetColorNormal (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.ColorNormal;
		}
#pragma warning restore 0169

		static Delegate cb_setColorNormal_I;
#pragma warning disable 0169
		static Delegate GetSetColorNormal_IHandler ()
		{
			if (cb_setColorNormal_I == null)
				cb_setColorNormal_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetColorNormal_I));
			return cb_setColorNormal_I;
		}

		static void n_SetColorNormal_I (IntPtr jnienv, IntPtr native__this, int color)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.ColorNormal = color;
		}
#pragma warning restore 0169

		public virtual unsafe int ColorNormal {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='getColorNormal' and count(parameter)=0]"
			[Register ("getColorNormal", "()I", "GetGetColorNormalHandler")]
			get {
				const string __id = "getColorNormal.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setColorNormal' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setColorNormal", "(I)V", "GetSetColorNormal_IHandler")]
			set {
				const string __id = "setColorNormal.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate cb_getColorPressed;
#pragma warning disable 0169
		static Delegate GetGetColorPressedHandler ()
		{
			if (cb_getColorPressed == null)
				cb_getColorPressed = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetColorPressed));
			return cb_getColorPressed;
		}

		static int n_GetColorPressed (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.ColorPressed;
		}
#pragma warning restore 0169

		static Delegate cb_setColorPressed_I;
#pragma warning disable 0169
		static Delegate GetSetColorPressed_IHandler ()
		{
			if (cb_setColorPressed_I == null)
				cb_setColorPressed_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetColorPressed_I));
			return cb_setColorPressed_I;
		}

		static void n_SetColorPressed_I (IntPtr jnienv, IntPtr native__this, int color)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.ColorPressed = color;
		}
#pragma warning restore 0169

		public virtual unsafe int ColorPressed {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='getColorPressed' and count(parameter)=0]"
			[Register ("getColorPressed", "()I", "GetGetColorPressedHandler")]
			get {
				const string __id = "getColorPressed.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setColorPressed' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setColorPressed", "(I)V", "GetSetColorPressed_IHandler")]
			set {
				const string __id = "setColorPressed.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate cb_getColorRipple;
#pragma warning disable 0169
		static Delegate GetGetColorRippleHandler ()
		{
			if (cb_getColorRipple == null)
				cb_getColorRipple = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetColorRipple));
			return cb_getColorRipple;
		}

		static int n_GetColorRipple (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.ColorRipple;
		}
#pragma warning restore 0169

		static Delegate cb_setColorRipple_I;
#pragma warning disable 0169
		static Delegate GetSetColorRipple_IHandler ()
		{
			if (cb_setColorRipple_I == null)
				cb_setColorRipple_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetColorRipple_I));
			return cb_setColorRipple_I;
		}

		static void n_SetColorRipple_I (IntPtr jnienv, IntPtr native__this, int color)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.ColorRipple = color;
		}
#pragma warning restore 0169

		public virtual unsafe int ColorRipple {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='getColorRipple' and count(parameter)=0]"
			[Register ("getColorRipple", "()I", "GetGetColorRippleHandler")]
			get {
				const string __id = "getColorRipple.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setColorRipple' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setColorRipple", "(I)V", "GetSetColorRipple_IHandler")]
			set {
				const string __id = "setColorRipple.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate cb_hasShadow;
#pragma warning disable 0169
		static Delegate GetHasShadowHandler ()
		{
			if (cb_hasShadow == null)
				cb_hasShadow = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_HasShadow));
			return cb_hasShadow;
		}

		static bool n_HasShadow (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.HasShadow;
		}
#pragma warning restore 0169

		public virtual unsafe bool HasShadow {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='hasShadow' and count(parameter)=0]"
			[Register ("hasShadow", "()Z", "GetHasShadowHandler")]
			get {
				const string __id = "hasShadow.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate cb_getIconDrawable;
#pragma warning disable 0169
		static Delegate GetGetIconDrawableHandler ()
		{
			if (cb_getIconDrawable == null)
				cb_getIconDrawable = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetIconDrawable));
			return cb_getIconDrawable;
		}

		static IntPtr n_GetIconDrawable (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.IconDrawable);
		}
#pragma warning restore 0169

		protected virtual unsafe global::Android.Graphics.Drawables.Drawable IconDrawable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='getIconDrawable' and count(parameter)=0]"
			[Register ("getIconDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetIconDrawableHandler")]
			get {
				const string __id = "getIconDrawable.()Landroid/graphics/drawable/Drawable;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Android.Graphics.Drawables.Drawable> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_isHidden;
#pragma warning disable 0169
		static Delegate GetIsHiddenHandler ()
		{
			if (cb_isHidden == null)
				cb_isHidden = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsHidden));
			return cb_isHidden;
		}

		static bool n_IsHidden (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.IsHidden;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsHidden {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='isHidden' and count(parameter)=0]"
			[Register ("isHidden", "()Z", "GetIsHiddenHandler")]
			get {
				const string __id = "isHidden.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate cb_isProgressBackgroundShown;
#pragma warning disable 0169
		static Delegate GetIsProgressBackgroundShownHandler ()
		{
			if (cb_isProgressBackgroundShown == null)
				cb_isProgressBackgroundShown = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsProgressBackgroundShown));
			return cb_isProgressBackgroundShown;
		}

		static bool n_IsProgressBackgroundShown (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.IsProgressBackgroundShown;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsProgressBackgroundShown {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='isProgressBackgroundShown' and count(parameter)=0]"
			[Register ("isProgressBackgroundShown", "()Z", "GetIsProgressBackgroundShownHandler")]
			get {
				const string __id = "isProgressBackgroundShown.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate cb_getLabelText;
#pragma warning disable 0169
		static Delegate GetGetLabelTextHandler ()
		{
			if (cb_getLabelText == null)
				cb_getLabelText = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetLabelText));
			return cb_getLabelText;
		}

		static IntPtr n_GetLabelText (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.NewString (__this.LabelText);
		}
#pragma warning restore 0169

		static Delegate cb_setLabelText_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetLabelText_Ljava_lang_String_Handler ()
		{
			if (cb_setLabelText_Ljava_lang_String_ == null)
				cb_setLabelText_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetLabelText_Ljava_lang_String_));
			return cb_setLabelText_Ljava_lang_String_;
		}

		static void n_SetLabelText_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_text)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var text = JNIEnv.GetString (native_text, JniHandleOwnership.DoNotTransfer);
			__this.LabelText = text;
		}
#pragma warning restore 0169

		public virtual unsafe string LabelText {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='getLabelText' and count(parameter)=0]"
			[Register ("getLabelText", "()Ljava/lang/String;", "GetGetLabelTextHandler")]
			get {
				const string __id = "getLabelText.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setLabelText' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setLabelText", "(Ljava/lang/String;)V", "GetSetLabelText_Ljava_lang_String_Handler")]
			set {
				const string __id = "setLabelText.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static Delegate cb_getLabelVisibility;
#pragma warning disable 0169
		static Delegate GetGetLabelVisibilityHandler ()
		{
			if (cb_getLabelVisibility == null)
				cb_getLabelVisibility = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetLabelVisibility));
			return cb_getLabelVisibility;
		}

		static int n_GetLabelVisibility (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.LabelVisibility;
		}
#pragma warning restore 0169

		static Delegate cb_setLabelVisibility_I;
#pragma warning disable 0169
		static Delegate GetSetLabelVisibility_IHandler ()
		{
			if (cb_setLabelVisibility_I == null)
				cb_setLabelVisibility_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetLabelVisibility_I));
			return cb_setLabelVisibility_I;
		}

		static void n_SetLabelVisibility_I (IntPtr jnienv, IntPtr native__this, int visibility)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.LabelVisibility = visibility;
		}
#pragma warning restore 0169

		public virtual unsafe int LabelVisibility {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='getLabelVisibility' and count(parameter)=0]"
			[Register ("getLabelVisibility", "()I", "GetGetLabelVisibilityHandler")]
			get {
				const string __id = "getLabelVisibility.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setLabelVisibility' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setLabelVisibility", "(I)V", "GetSetLabelVisibility_IHandler")]
			set {
				const string __id = "setLabelVisibility.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate cb_getMax;
#pragma warning disable 0169
		static Delegate GetGetMaxHandler ()
		{
			if (cb_getMax == null)
				cb_getMax = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetMax));
			return cb_getMax;
		}

		static int n_GetMax (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.Max;
		}
#pragma warning restore 0169

		static Delegate cb_setMax_I;
#pragma warning disable 0169
		static Delegate GetSetMax_IHandler ()
		{
			if (cb_setMax_I == null)
				cb_setMax_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetMax_I));
			return cb_setMax_I;
		}

		static void n_SetMax_I (IntPtr jnienv, IntPtr native__this, int max)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.Max = max;
		}
#pragma warning restore 0169

		public virtual unsafe int Max {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='getMax' and count(parameter)=0]"
			[Register ("getMax", "()I", "GetGetMaxHandler")]
			get {
				const string __id = "getMax.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setMax' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setMax", "(I)V", "GetSetMax_IHandler")]
			set {
				const string __id = "setMax.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate cb_getProgress;
#pragma warning disable 0169
		static Delegate GetGetProgressHandler ()
		{
			if (cb_getProgress == null)
				cb_getProgress = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetProgress));
			return cb_getProgress;
		}

		static int n_GetProgress (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.Progress;
		}
#pragma warning restore 0169

		public virtual unsafe int Progress {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='getProgress' and count(parameter)=0]"
			[Register ("getProgress", "()I", "GetGetProgressHandler")]
			get {
				const string __id = "getProgress.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate cb_getShadowColor;
#pragma warning disable 0169
		static Delegate GetGetShadowColorHandler ()
		{
			if (cb_getShadowColor == null)
				cb_getShadowColor = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetShadowColor));
			return cb_getShadowColor;
		}

		static int n_GetShadowColor (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.ShadowColor;
		}
#pragma warning restore 0169

		static Delegate cb_setShadowColor_I;
#pragma warning disable 0169
		static Delegate GetSetShadowColor_IHandler ()
		{
			if (cb_setShadowColor_I == null)
				cb_setShadowColor_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetShadowColor_I));
			return cb_setShadowColor_I;
		}

		static void n_SetShadowColor_I (IntPtr jnienv, IntPtr native__this, int color)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.ShadowColor = color;
		}
#pragma warning restore 0169

		public virtual unsafe int ShadowColor {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='getShadowColor' and count(parameter)=0]"
			[Register ("getShadowColor", "()I", "GetGetShadowColorHandler")]
			get {
				const string __id = "getShadowColor.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setShadowColor' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setShadowColor", "(I)V", "GetSetShadowColor_IHandler")]
			set {
				const string __id = "setShadowColor.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate cb_getShadowRadius;
#pragma warning disable 0169
		static Delegate GetGetShadowRadiusHandler ()
		{
			if (cb_getShadowRadius == null)
				cb_getShadowRadius = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetShadowRadius));
			return cb_getShadowRadius;
		}

		static int n_GetShadowRadius (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.ShadowRadius;
		}
#pragma warning restore 0169

		static Delegate cb_setShadowRadius_I;
#pragma warning disable 0169
		static Delegate GetSetShadowRadius_IHandler ()
		{
			if (cb_setShadowRadius_I == null)
				cb_setShadowRadius_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetShadowRadius_I));
			return cb_setShadowRadius_I;
		}

		static void n_SetShadowRadius_I (IntPtr jnienv, IntPtr native__this, int dimenResId)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.ShadowRadius = dimenResId;
		}
#pragma warning restore 0169

		public virtual unsafe int ShadowRadius {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='getShadowRadius' and count(parameter)=0]"
			[Register ("getShadowRadius", "()I", "GetGetShadowRadiusHandler")]
			get {
				const string __id = "getShadowRadius.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setShadowRadius' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setShadowRadius", "(I)V", "GetSetShadowRadius_IHandler")]
			set {
				const string __id = "setShadowRadius.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate cb_getShadowXOffset;
#pragma warning disable 0169
		static Delegate GetGetShadowXOffsetHandler ()
		{
			if (cb_getShadowXOffset == null)
				cb_getShadowXOffset = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetShadowXOffset));
			return cb_getShadowXOffset;
		}

		static int n_GetShadowXOffset (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.ShadowXOffset;
		}
#pragma warning restore 0169

		static Delegate cb_setShadowXOffset_I;
#pragma warning disable 0169
		static Delegate GetSetShadowXOffset_IHandler ()
		{
			if (cb_setShadowXOffset_I == null)
				cb_setShadowXOffset_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetShadowXOffset_I));
			return cb_setShadowXOffset_I;
		}

		static void n_SetShadowXOffset_I (IntPtr jnienv, IntPtr native__this, int dimenResId)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.ShadowXOffset = dimenResId;
		}
#pragma warning restore 0169

		public virtual unsafe int ShadowXOffset {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='getShadowXOffset' and count(parameter)=0]"
			[Register ("getShadowXOffset", "()I", "GetGetShadowXOffsetHandler")]
			get {
				const string __id = "getShadowXOffset.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setShadowXOffset' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setShadowXOffset", "(I)V", "GetSetShadowXOffset_IHandler")]
			set {
				const string __id = "setShadowXOffset.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate cb_getShadowYOffset;
#pragma warning disable 0169
		static Delegate GetGetShadowYOffsetHandler ()
		{
			if (cb_getShadowYOffset == null)
				cb_getShadowYOffset = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetShadowYOffset));
			return cb_getShadowYOffset;
		}

		static int n_GetShadowYOffset (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.ShadowYOffset;
		}
#pragma warning restore 0169

		static Delegate cb_setShadowYOffset_I;
#pragma warning disable 0169
		static Delegate GetSetShadowYOffset_IHandler ()
		{
			if (cb_setShadowYOffset_I == null)
				cb_setShadowYOffset_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetShadowYOffset_I));
			return cb_setShadowYOffset_I;
		}

		static void n_SetShadowYOffset_I (IntPtr jnienv, IntPtr native__this, int dimenResId)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.ShadowYOffset = dimenResId;
		}
#pragma warning restore 0169

		public virtual unsafe int ShadowYOffset {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='getShadowYOffset' and count(parameter)=0]"
			[Register ("getShadowYOffset", "()I", "GetGetShadowYOffsetHandler")]
			get {
				const string __id = "getShadowYOffset.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setShadowYOffset' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setShadowYOffset", "(I)V", "GetSetShadowYOffset_IHandler")]
			set {
				const string __id = "setShadowYOffset.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate cb_hide_Z;
#pragma warning disable 0169
		static Delegate GetHide_ZHandler ()
		{
			if (cb_hide_Z == null)
				cb_hide_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_Hide_Z));
			return cb_hide_Z;
		}

		static void n_Hide_Z (IntPtr jnienv, IntPtr native__this, bool animate)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.Hide (animate);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='hide' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("hide", "(Z)V", "GetHide_ZHandler")]
		public virtual unsafe void Hide (bool animate)
		{
			const string __id = "hide.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (animate);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_hideButtonInMenu_Z;
#pragma warning disable 0169
		static Delegate GetHideButtonInMenu_ZHandler ()
		{
			if (cb_hideButtonInMenu_Z == null)
				cb_hideButtonInMenu_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_HideButtonInMenu_Z));
			return cb_hideButtonInMenu_Z;
		}

		static void n_HideButtonInMenu_Z (IntPtr jnienv, IntPtr native__this, bool animate)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.HideButtonInMenu (animate);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='hideButtonInMenu' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("hideButtonInMenu", "(Z)V", "GetHideButtonInMenu_ZHandler")]
		public virtual unsafe void HideButtonInMenu (bool animate)
		{
			const string __id = "hideButtonInMenu.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (animate);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_hideProgress;
#pragma warning disable 0169
		static Delegate GetHideProgressHandler ()
		{
			if (cb_hideProgress == null)
				cb_hideProgress = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_HideProgress));
			return cb_hideProgress;
		}

		static void n_HideProgress (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.HideProgress ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='hideProgress' and count(parameter)=0]"
		[Register ("hideProgress", "()V", "GetHideProgressHandler")]
		public virtual unsafe void HideProgress ()
		{
			const string __id = "hideProgress.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_onRestoreInstanceState_Landroid_os_Parcelable_;
#pragma warning disable 0169
		static Delegate GetOnRestoreInstanceState_Landroid_os_Parcelable_Handler ()
		{
			if (cb_onRestoreInstanceState_Landroid_os_Parcelable_ == null)
				cb_onRestoreInstanceState_Landroid_os_Parcelable_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_OnRestoreInstanceState_Landroid_os_Parcelable_));
			return cb_onRestoreInstanceState_Landroid_os_Parcelable_;
		}

		static void n_OnRestoreInstanceState_Landroid_os_Parcelable_ (IntPtr jnienv, IntPtr native__this, IntPtr native_state)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var state = (global::Android.OS.IParcelable)global::Java.Lang.Object.GetObject<global::Android.OS.IParcelable> (native_state, JniHandleOwnership.DoNotTransfer);
			__this.OnRestoreInstanceState (state);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='onRestoreInstanceState' and count(parameter)=1 and parameter[1][@type='android.os.Parcelable']]"
		[Register ("onRestoreInstanceState", "(Landroid/os/Parcelable;)V", "GetOnRestoreInstanceState_Landroid_os_Parcelable_Handler")]
		public virtual unsafe void OnRestoreInstanceState (global::Android.OS.IParcelable state)
		{
			const string __id = "onRestoreInstanceState.(Landroid/os/Parcelable;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((state == null) ? IntPtr.Zero : ((global::Java.Lang.Object) state).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (state);
			}
		}

		static Delegate cb_onSaveInstanceState;
#pragma warning disable 0169
		static Delegate GetOnSaveInstanceStateHandler ()
		{
			if (cb_onSaveInstanceState == null)
				cb_onSaveInstanceState = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_OnSaveInstanceState));
			return cb_onSaveInstanceState;
		}

		static IntPtr n_OnSaveInstanceState (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.OnSaveInstanceState ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='onSaveInstanceState' and count(parameter)=0]"
		[Register ("onSaveInstanceState", "()Landroid/os/Parcelable;", "GetOnSaveInstanceStateHandler")]
		public virtual unsafe global::Android.OS.IParcelable OnSaveInstanceState ()
		{
			const string __id = "onSaveInstanceState.()Landroid/os/Parcelable;";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return global::Java.Lang.Object.GetObject<global::Android.OS.IParcelable> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate cb_setColorDisabledResId_I;
#pragma warning disable 0169
		static Delegate GetSetColorDisabledResId_IHandler ()
		{
			if (cb_setColorDisabledResId_I == null)
				cb_setColorDisabledResId_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetColorDisabledResId_I));
			return cb_setColorDisabledResId_I;
		}

		static void n_SetColorDisabledResId_I (IntPtr jnienv, IntPtr native__this, int colorResId)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetColorDisabledResId (colorResId);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setColorDisabledResId' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setColorDisabledResId", "(I)V", "GetSetColorDisabledResId_IHandler")]
		public virtual unsafe void SetColorDisabledResId (int colorResId)
		{
			const string __id = "setColorDisabledResId.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (colorResId);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setColorNormalResId_I;
#pragma warning disable 0169
		static Delegate GetSetColorNormalResId_IHandler ()
		{
			if (cb_setColorNormalResId_I == null)
				cb_setColorNormalResId_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetColorNormalResId_I));
			return cb_setColorNormalResId_I;
		}

		static void n_SetColorNormalResId_I (IntPtr jnienv, IntPtr native__this, int colorResId)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetColorNormalResId (colorResId);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setColorNormalResId' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setColorNormalResId", "(I)V", "GetSetColorNormalResId_IHandler")]
		public virtual unsafe void SetColorNormalResId (int colorResId)
		{
			const string __id = "setColorNormalResId.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (colorResId);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setColorPressedResId_I;
#pragma warning disable 0169
		static Delegate GetSetColorPressedResId_IHandler ()
		{
			if (cb_setColorPressedResId_I == null)
				cb_setColorPressedResId_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetColorPressedResId_I));
			return cb_setColorPressedResId_I;
		}

		static void n_SetColorPressedResId_I (IntPtr jnienv, IntPtr native__this, int colorResId)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetColorPressedResId (colorResId);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setColorPressedResId' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setColorPressedResId", "(I)V", "GetSetColorPressedResId_IHandler")]
		public virtual unsafe void SetColorPressedResId (int colorResId)
		{
			const string __id = "setColorPressedResId.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (colorResId);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setColorRippleResId_I;
#pragma warning disable 0169
		static Delegate GetSetColorRippleResId_IHandler ()
		{
			if (cb_setColorRippleResId_I == null)
				cb_setColorRippleResId_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetColorRippleResId_I));
			return cb_setColorRippleResId_I;
		}

		static void n_SetColorRippleResId_I (IntPtr jnienv, IntPtr native__this, int colorResId)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetColorRippleResId (colorResId);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setColorRippleResId' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setColorRippleResId", "(I)V", "GetSetColorRippleResId_IHandler")]
		public virtual unsafe void SetColorRippleResId (int colorResId)
		{
			const string __id = "setColorRippleResId.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (colorResId);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setElevationCompat_F;
#pragma warning disable 0169
		static Delegate GetSetElevationCompat_FHandler ()
		{
			if (cb_setElevationCompat_F == null)
				cb_setElevationCompat_F = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPF_V (n_SetElevationCompat_F));
			return cb_setElevationCompat_F;
		}

		static void n_SetElevationCompat_F (IntPtr jnienv, IntPtr native__this, float elevation)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetElevationCompat (elevation);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setElevationCompat' and count(parameter)=1 and parameter[1][@type='float']]"
		[Register ("setElevationCompat", "(F)V", "GetSetElevationCompat_FHandler")]
		public virtual unsafe void SetElevationCompat (float elevation)
		{
			const string __id = "setElevationCompat.(F)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (elevation);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setHideAnimation_Landroid_view_animation_Animation_;
#pragma warning disable 0169
		static Delegate GetSetHideAnimation_Landroid_view_animation_Animation_Handler ()
		{
			if (cb_setHideAnimation_Landroid_view_animation_Animation_ == null)
				cb_setHideAnimation_Landroid_view_animation_Animation_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetHideAnimation_Landroid_view_animation_Animation_));
			return cb_setHideAnimation_Landroid_view_animation_Animation_;
		}

		static void n_SetHideAnimation_Landroid_view_animation_Animation_ (IntPtr jnienv, IntPtr native__this, IntPtr native_hideAnimation)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var hideAnimation = global::Java.Lang.Object.GetObject<global::Android.Views.Animations.Animation> (native_hideAnimation, JniHandleOwnership.DoNotTransfer);
			__this.SetHideAnimation (hideAnimation);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setHideAnimation' and count(parameter)=1 and parameter[1][@type='android.view.animation.Animation']]"
		[Register ("setHideAnimation", "(Landroid/view/animation/Animation;)V", "GetSetHideAnimation_Landroid_view_animation_Animation_Handler")]
		public virtual unsafe void SetHideAnimation (global::Android.Views.Animations.Animation hideAnimation)
		{
			const string __id = "setHideAnimation.(Landroid/view/animation/Animation;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((hideAnimation == null) ? IntPtr.Zero : ((global::Java.Lang.Object) hideAnimation).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (hideAnimation);
			}
		}

		static Delegate cb_setIndeterminate_Z;
#pragma warning disable 0169
		static Delegate GetSetIndeterminate_ZHandler ()
		{
			if (cb_setIndeterminate_Z == null)
				cb_setIndeterminate_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetIndeterminate_Z));
			return cb_setIndeterminate_Z;
		}

		static void n_SetIndeterminate_Z (IntPtr jnienv, IntPtr native__this, bool indeterminate)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetIndeterminate (indeterminate);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setIndeterminate' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("setIndeterminate", "(Z)V", "GetSetIndeterminate_ZHandler")]
		public virtual unsafe void SetIndeterminate (bool indeterminate)
		{
			const string __id = "setIndeterminate.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (indeterminate);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setLabelColors_III;
#pragma warning disable 0169
		static Delegate GetSetLabelColors_IIIHandler ()
		{
			if (cb_setLabelColors_III == null)
				cb_setLabelColors_III = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIII_V (n_SetLabelColors_III));
			return cb_setLabelColors_III;
		}

		static void n_SetLabelColors_III (IntPtr jnienv, IntPtr native__this, int colorNormal, int colorPressed, int colorRipple)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetLabelColors (colorNormal, colorPressed, colorRipple);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setLabelColors' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
		[Register ("setLabelColors", "(III)V", "GetSetLabelColors_IIIHandler")]
		public virtual unsafe void SetLabelColors (int colorNormal, int colorPressed, int colorRipple)
		{
			const string __id = "setLabelColors.(III)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (colorNormal);
				__args [1] = new JniArgumentValue (colorPressed);
				__args [2] = new JniArgumentValue (colorRipple);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setLabelTextColor_Landroid_content_res_ColorStateList_;
#pragma warning disable 0169
		static Delegate GetSetLabelTextColor_Landroid_content_res_ColorStateList_Handler ()
		{
			if (cb_setLabelTextColor_Landroid_content_res_ColorStateList_ == null)
				cb_setLabelTextColor_Landroid_content_res_ColorStateList_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetLabelTextColor_Landroid_content_res_ColorStateList_));
			return cb_setLabelTextColor_Landroid_content_res_ColorStateList_;
		}

		static void n_SetLabelTextColor_Landroid_content_res_ColorStateList_ (IntPtr jnienv, IntPtr native__this, IntPtr native_colors)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var colors = global::Java.Lang.Object.GetObject<global::Android.Content.Res.ColorStateList> (native_colors, JniHandleOwnership.DoNotTransfer);
			__this.SetLabelTextColor (colors);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setLabelTextColor' and count(parameter)=1 and parameter[1][@type='android.content.res.ColorStateList']]"
		[Register ("setLabelTextColor", "(Landroid/content/res/ColorStateList;)V", "GetSetLabelTextColor_Landroid_content_res_ColorStateList_Handler")]
		public virtual unsafe void SetLabelTextColor (global::Android.Content.Res.ColorStateList colors)
		{
			const string __id = "setLabelTextColor.(Landroid/content/res/ColorStateList;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((colors == null) ? IntPtr.Zero : ((global::Java.Lang.Object) colors).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (colors);
			}
		}

		static Delegate cb_setLabelTextColor_I;
#pragma warning disable 0169
		static Delegate GetSetLabelTextColor_IHandler ()
		{
			if (cb_setLabelTextColor_I == null)
				cb_setLabelTextColor_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetLabelTextColor_I));
			return cb_setLabelTextColor_I;
		}

		static void n_SetLabelTextColor_I (IntPtr jnienv, IntPtr native__this, int color)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetLabelTextColor (color);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setLabelTextColor' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setLabelTextColor", "(I)V", "GetSetLabelTextColor_IHandler")]
		public virtual unsafe void SetLabelTextColor (int color)
		{
			const string __id = "setLabelTextColor.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (color);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setProgress_IZ;
#pragma warning disable 0169
		static Delegate GetSetProgress_IZHandler ()
		{
			if (cb_setProgress_IZ == null)
				cb_setProgress_IZ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIZ_V (n_SetProgress_IZ));
			return cb_setProgress_IZ;
		}

		static void n_SetProgress_IZ (IntPtr jnienv, IntPtr native__this, int progress, bool animate)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetProgress (progress, animate);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setProgress' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='boolean']]"
		[Register ("setProgress", "(IZ)V", "GetSetProgress_IZHandler")]
		public virtual unsafe void SetProgress (int progress, bool animate)
		{
			const string __id = "setProgress.(IZ)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (progress);
				__args [1] = new JniArgumentValue (animate);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setShadowColorResource_I;
#pragma warning disable 0169
		static Delegate GetSetShadowColorResource_IHandler ()
		{
			if (cb_setShadowColorResource_I == null)
				cb_setShadowColorResource_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetShadowColorResource_I));
			return cb_setShadowColorResource_I;
		}

		static void n_SetShadowColorResource_I (IntPtr jnienv, IntPtr native__this, int colorResId)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetShadowColorResource (colorResId);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setShadowColorResource' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setShadowColorResource", "(I)V", "GetSetShadowColorResource_IHandler")]
		public virtual unsafe void SetShadowColorResource (int colorResId)
		{
			const string __id = "setShadowColorResource.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (colorResId);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setShadowRadius_F;
#pragma warning disable 0169
		static Delegate GetSetShadowRadius_FHandler ()
		{
			if (cb_setShadowRadius_F == null)
				cb_setShadowRadius_F = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPF_V (n_SetShadowRadius_F));
			return cb_setShadowRadius_F;
		}

		static void n_SetShadowRadius_F (IntPtr jnienv, IntPtr native__this, float shadowRadiusDp)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetShadowRadius (shadowRadiusDp);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setShadowRadius' and count(parameter)=1 and parameter[1][@type='float']]"
		[Register ("setShadowRadius", "(F)V", "GetSetShadowRadius_FHandler")]
		public virtual unsafe void SetShadowRadius (float shadowRadiusDp)
		{
			const string __id = "setShadowRadius.(F)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (shadowRadiusDp);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setShadowXOffset_F;
#pragma warning disable 0169
		static Delegate GetSetShadowXOffset_FHandler ()
		{
			if (cb_setShadowXOffset_F == null)
				cb_setShadowXOffset_F = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPF_V (n_SetShadowXOffset_F));
			return cb_setShadowXOffset_F;
		}

		static void n_SetShadowXOffset_F (IntPtr jnienv, IntPtr native__this, float shadowXOffsetDp)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetShadowXOffset (shadowXOffsetDp);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setShadowXOffset' and count(parameter)=1 and parameter[1][@type='float']]"
		[Register ("setShadowXOffset", "(F)V", "GetSetShadowXOffset_FHandler")]
		public virtual unsafe void SetShadowXOffset (float shadowXOffsetDp)
		{
			const string __id = "setShadowXOffset.(F)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (shadowXOffsetDp);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setShadowYOffset_F;
#pragma warning disable 0169
		static Delegate GetSetShadowYOffset_FHandler ()
		{
			if (cb_setShadowYOffset_F == null)
				cb_setShadowYOffset_F = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPF_V (n_SetShadowYOffset_F));
			return cb_setShadowYOffset_F;
		}

		static void n_SetShadowYOffset_F (IntPtr jnienv, IntPtr native__this, float shadowYOffsetDp)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetShadowYOffset (shadowYOffsetDp);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setShadowYOffset' and count(parameter)=1 and parameter[1][@type='float']]"
		[Register ("setShadowYOffset", "(F)V", "GetSetShadowYOffset_FHandler")]
		public virtual unsafe void SetShadowYOffset (float shadowYOffsetDp)
		{
			const string __id = "setShadowYOffset.(F)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (shadowYOffsetDp);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setShowAnimation_Landroid_view_animation_Animation_;
#pragma warning disable 0169
		static Delegate GetSetShowAnimation_Landroid_view_animation_Animation_Handler ()
		{
			if (cb_setShowAnimation_Landroid_view_animation_Animation_ == null)
				cb_setShowAnimation_Landroid_view_animation_Animation_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetShowAnimation_Landroid_view_animation_Animation_));
			return cb_setShowAnimation_Landroid_view_animation_Animation_;
		}

		static void n_SetShowAnimation_Landroid_view_animation_Animation_ (IntPtr jnienv, IntPtr native__this, IntPtr native_showAnimation)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var showAnimation = global::Java.Lang.Object.GetObject<global::Android.Views.Animations.Animation> (native_showAnimation, JniHandleOwnership.DoNotTransfer);
			__this.SetShowAnimation (showAnimation);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setShowAnimation' and count(parameter)=1 and parameter[1][@type='android.view.animation.Animation']]"
		[Register ("setShowAnimation", "(Landroid/view/animation/Animation;)V", "GetSetShowAnimation_Landroid_view_animation_Animation_Handler")]
		public virtual unsafe void SetShowAnimation (global::Android.Views.Animations.Animation showAnimation)
		{
			const string __id = "setShowAnimation.(Landroid/view/animation/Animation;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((showAnimation == null) ? IntPtr.Zero : ((global::Java.Lang.Object) showAnimation).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (showAnimation);
			}
		}

		static Delegate cb_setShowProgressBackground_Z;
#pragma warning disable 0169
		static Delegate GetSetShowProgressBackground_ZHandler ()
		{
			if (cb_setShowProgressBackground_Z == null)
				cb_setShowProgressBackground_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetShowProgressBackground_Z));
			return cb_setShowProgressBackground_Z;
		}

		static void n_SetShowProgressBackground_Z (IntPtr jnienv, IntPtr native__this, bool show)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetShowProgressBackground (show);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setShowProgressBackground' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("setShowProgressBackground", "(Z)V", "GetSetShowProgressBackground_ZHandler")]
		public virtual unsafe void SetShowProgressBackground (bool show)
		{
			const string __id = "setShowProgressBackground.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (show);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setShowShadow_Z;
#pragma warning disable 0169
		static Delegate GetSetShowShadow_ZHandler ()
		{
			if (cb_setShowShadow_Z == null)
				cb_setShowShadow_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetShowShadow_Z));
			return cb_setShowShadow_Z;
		}

		static void n_SetShowShadow_Z (IntPtr jnienv, IntPtr native__this, bool show)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetShowShadow (show);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='setShowShadow' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("setShowShadow", "(Z)V", "GetSetShowShadow_ZHandler")]
		public virtual unsafe void SetShowShadow (bool show)
		{
			const string __id = "setShowShadow.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (show);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_show_Z;
#pragma warning disable 0169
		static Delegate GetShow_ZHandler ()
		{
			if (cb_show_Z == null)
				cb_show_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_Show_Z));
			return cb_show_Z;
		}

		static void n_Show_Z (IntPtr jnienv, IntPtr native__this, bool animate)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.Show (animate);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='show' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("show", "(Z)V", "GetShow_ZHandler")]
		public virtual unsafe void Show (bool animate)
		{
			const string __id = "show.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (animate);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_showButtonInMenu_Z;
#pragma warning disable 0169
		static Delegate GetShowButtonInMenu_ZHandler ()
		{
			if (cb_showButtonInMenu_Z == null)
				cb_showButtonInMenu_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_ShowButtonInMenu_Z));
			return cb_showButtonInMenu_Z;
		}

		static void n_ShowButtonInMenu_Z (IntPtr jnienv, IntPtr native__this, bool animate)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.ShowButtonInMenu (animate);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='showButtonInMenu' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("showButtonInMenu", "(Z)V", "GetShowButtonInMenu_ZHandler")]
		public virtual unsafe void ShowButtonInMenu (bool animate)
		{
			const string __id = "showButtonInMenu.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (animate);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_toggle_Z;
#pragma warning disable 0169
		static Delegate GetToggle_ZHandler ()
		{
			if (cb_toggle_Z == null)
				cb_toggle_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_Toggle_Z));
			return cb_toggle_Z;
		}

		static void n_Toggle_Z (IntPtr jnienv, IntPtr native__this, bool animate)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.Toggle (animate);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionButton']/method[@name='toggle' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("toggle", "(Z)V", "GetToggle_ZHandler")]
		public virtual unsafe void Toggle (bool animate)
		{
			const string __id = "toggle.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (animate);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

	}
}
