//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Github.Clans.Fab {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']"
	[global::Android.Runtime.Register ("com/github/clans/fab/FloatingActionMenu", DoNotGenerateAcw=true)]
	public partial class FloatingActionMenu : global::Android.Views.ViewGroup {
		// Metadata.xml XPath interface reference: path="/api/package[@name='com.github.clans.fab']/interface[@name='FloatingActionMenu.OnMenuToggleListener']"
		[Register ("com/github/clans/fab/FloatingActionMenu$OnMenuToggleListener", "", "Com.Github.Clans.Fab.FloatingActionMenu/IOnMenuToggleListenerInvoker")]
		public partial interface IOnMenuToggleListener : IJavaObject, IJavaPeerable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/interface[@name='FloatingActionMenu.OnMenuToggleListener']/method[@name='onMenuToggle' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("onMenuToggle", "(Z)V", "GetOnMenuToggle_ZHandler:Com.Github.Clans.Fab.FloatingActionMenu/IOnMenuToggleListenerInvoker, BindingFloatingActionButton")]
			void OnMenuToggle (bool p0);

		}

		[global::Android.Runtime.Register ("com/github/clans/fab/FloatingActionMenu$OnMenuToggleListener", DoNotGenerateAcw=true)]
		internal partial class IOnMenuToggleListenerInvoker : global::Java.Lang.Object, IOnMenuToggleListener {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/github/clans/fab/FloatingActionMenu$OnMenuToggleListener", typeof (IOnMenuToggleListenerInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static IOnMenuToggleListener GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<IOnMenuToggleListener> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.github.clans.fab.FloatingActionMenu.OnMenuToggleListener'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public IOnMenuToggleListenerInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate cb_onMenuToggle_Z;
#pragma warning disable 0169
			static Delegate GetOnMenuToggle_ZHandler ()
			{
				if (cb_onMenuToggle_Z == null)
					cb_onMenuToggle_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_OnMenuToggle_Z));
				return cb_onMenuToggle_Z;
			}

			static void n_OnMenuToggle_Z (IntPtr jnienv, IntPtr native__this, bool p0)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu.IOnMenuToggleListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				__this.OnMenuToggle (p0);
			}
#pragma warning restore 0169

			IntPtr id_onMenuToggle_Z;
			public unsafe void OnMenuToggle (bool p0)
			{
				if (id_onMenuToggle_Z == IntPtr.Zero)
					id_onMenuToggle_Z = JNIEnv.GetMethodID (class_ref, "onMenuToggle", "(Z)V");
				JValue* __args = stackalloc JValue [1];
				__args [0] = new JValue (p0);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onMenuToggle_Z, __args);
			}

		}

		// event args for com.github.clans.fab.FloatingActionMenu.OnMenuToggleListener.onMenuToggle
		public partial class MenuToggleEventArgs : global::System.EventArgs {
			public MenuToggleEventArgs (bool p0)
			{
				this.p0 = p0;
			}

			bool p0;

			public bool P0 {
				get { return p0; }
			}

		}

		[global::Android.Runtime.Register ("mono/com/github/clans/fab/FloatingActionMenu_OnMenuToggleListenerImplementor")]
		internal sealed partial class IOnMenuToggleListenerImplementor : global::Java.Lang.Object, IOnMenuToggleListener {

			object sender;

			public IOnMenuToggleListenerImplementor (object sender) : base (global::Android.Runtime.JNIEnv.StartCreateInstance ("mono/com/github/clans/fab/FloatingActionMenu_OnMenuToggleListenerImplementor", "()V"), JniHandleOwnership.TransferLocalRef)
			{
				global::Android.Runtime.JNIEnv.FinishCreateInstance (((global::Java.Lang.Object) this).Handle, "()V");
				this.sender = sender;
			}

			#pragma warning disable 0649
			public EventHandler<MenuToggleEventArgs> Handler;
			#pragma warning restore 0649

			public void OnMenuToggle (bool p0)
			{
				var __h = Handler;
				if (__h != null)
					__h (sender, new MenuToggleEventArgs (p0));
			}

			internal static bool __IsEmpty (IOnMenuToggleListenerImplementor value)
			{
				return value.Handler == null;
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/github/clans/fab/FloatingActionMenu", typeof (FloatingActionMenu));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected FloatingActionMenu (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/constructor[@name='FloatingActionMenu' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register (".ctor", "(Landroid/content/Context;)V", "")]
		public unsafe FloatingActionMenu (global::Android.Content.Context context) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Landroid/content/Context;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (context);
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/constructor[@name='FloatingActionMenu' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet']]"
		[Register (".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
		public unsafe FloatingActionMenu (global::Android.Content.Context context, global::Android.Util.IAttributeSet attrs) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Landroid/content/Context;Landroid/util/AttributeSet;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue ((attrs == null) ? IntPtr.Zero : ((global::Java.Lang.Object) attrs).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (context);
				global::System.GC.KeepAlive (attrs);
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/constructor[@name='FloatingActionMenu' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet'] and parameter[3][@type='int']]"
		[Register (".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
		public unsafe FloatingActionMenu (global::Android.Content.Context context, global::Android.Util.IAttributeSet attrs, int defStyleAttr) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Landroid/content/Context;Landroid/util/AttributeSet;I)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue ((attrs == null) ? IntPtr.Zero : ((global::Java.Lang.Object) attrs).Handle);
				__args [2] = new JniArgumentValue (defStyleAttr);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (context);
				global::System.GC.KeepAlive (attrs);
			}
		}

		static Delegate cb_isAnimated;
#pragma warning disable 0169
		static Delegate GetIsAnimatedHandler ()
		{
			if (cb_isAnimated == null)
				cb_isAnimated = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsAnimated));
			return cb_isAnimated;
		}

		static bool n_IsAnimated (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.Animated;
		}
#pragma warning restore 0169

		static Delegate cb_setAnimated_Z;
#pragma warning disable 0169
		static Delegate GetSetAnimated_ZHandler ()
		{
			if (cb_setAnimated_Z == null)
				cb_setAnimated_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetAnimated_Z));
			return cb_setAnimated_Z;
		}

		static void n_SetAnimated_Z (IntPtr jnienv, IntPtr native__this, bool animated)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.Animated = animated;
		}
#pragma warning restore 0169

		public virtual unsafe bool Animated {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='isAnimated' and count(parameter)=0]"
			[Register ("isAnimated", "()Z", "GetIsAnimatedHandler")]
			get {
				const string __id = "isAnimated.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='setAnimated' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setAnimated", "(Z)V", "GetSetAnimated_ZHandler")]
			set {
				const string __id = "setAnimated.(Z)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate cb_getAnimationDelayPerItem;
#pragma warning disable 0169
		static Delegate GetGetAnimationDelayPerItemHandler ()
		{
			if (cb_getAnimationDelayPerItem == null)
				cb_getAnimationDelayPerItem = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetAnimationDelayPerItem));
			return cb_getAnimationDelayPerItem;
		}

		static int n_GetAnimationDelayPerItem (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.AnimationDelayPerItem;
		}
#pragma warning restore 0169

		static Delegate cb_setAnimationDelayPerItem_I;
#pragma warning disable 0169
		static Delegate GetSetAnimationDelayPerItem_IHandler ()
		{
			if (cb_setAnimationDelayPerItem_I == null)
				cb_setAnimationDelayPerItem_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetAnimationDelayPerItem_I));
			return cb_setAnimationDelayPerItem_I;
		}

		static void n_SetAnimationDelayPerItem_I (IntPtr jnienv, IntPtr native__this, int animationDelayPerItem)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.AnimationDelayPerItem = animationDelayPerItem;
		}
#pragma warning restore 0169

		public virtual unsafe int AnimationDelayPerItem {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='getAnimationDelayPerItem' and count(parameter)=0]"
			[Register ("getAnimationDelayPerItem", "()I", "GetGetAnimationDelayPerItemHandler")]
			get {
				const string __id = "getAnimationDelayPerItem.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='setAnimationDelayPerItem' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setAnimationDelayPerItem", "(I)V", "GetSetAnimationDelayPerItem_IHandler")]
			set {
				const string __id = "setAnimationDelayPerItem.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate cb_isIconAnimated;
#pragma warning disable 0169
		static Delegate GetIsIconAnimatedHandler ()
		{
			if (cb_isIconAnimated == null)
				cb_isIconAnimated = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsIconAnimated));
			return cb_isIconAnimated;
		}

		static bool n_IsIconAnimated (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.IconAnimated;
		}
#pragma warning restore 0169

		static Delegate cb_setIconAnimated_Z;
#pragma warning disable 0169
		static Delegate GetSetIconAnimated_ZHandler ()
		{
			if (cb_setIconAnimated_Z == null)
				cb_setIconAnimated_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetIconAnimated_Z));
			return cb_setIconAnimated_Z;
		}

		static void n_SetIconAnimated_Z (IntPtr jnienv, IntPtr native__this, bool animated)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.IconAnimated = animated;
		}
#pragma warning restore 0169

		public virtual unsafe bool IconAnimated {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='isIconAnimated' and count(parameter)=0]"
			[Register ("isIconAnimated", "()Z", "GetIsIconAnimatedHandler")]
			get {
				const string __id = "isIconAnimated.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='setIconAnimated' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setIconAnimated", "(Z)V", "GetSetIconAnimated_ZHandler")]
			set {
				const string __id = "setIconAnimated.(Z)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate cb_getIconToggleAnimatorSet;
#pragma warning disable 0169
		static Delegate GetGetIconToggleAnimatorSetHandler ()
		{
			if (cb_getIconToggleAnimatorSet == null)
				cb_getIconToggleAnimatorSet = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetIconToggleAnimatorSet));
			return cb_getIconToggleAnimatorSet;
		}

		static IntPtr n_GetIconToggleAnimatorSet (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.IconToggleAnimatorSet);
		}
#pragma warning restore 0169

		static Delegate cb_setIconToggleAnimatorSet_Landroid_animation_AnimatorSet_;
#pragma warning disable 0169
		static Delegate GetSetIconToggleAnimatorSet_Landroid_animation_AnimatorSet_Handler ()
		{
			if (cb_setIconToggleAnimatorSet_Landroid_animation_AnimatorSet_ == null)
				cb_setIconToggleAnimatorSet_Landroid_animation_AnimatorSet_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetIconToggleAnimatorSet_Landroid_animation_AnimatorSet_));
			return cb_setIconToggleAnimatorSet_Landroid_animation_AnimatorSet_;
		}

		static void n_SetIconToggleAnimatorSet_Landroid_animation_AnimatorSet_ (IntPtr jnienv, IntPtr native__this, IntPtr native_toggleAnimatorSet)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var toggleAnimatorSet = global::Java.Lang.Object.GetObject<global::Android.Animation.AnimatorSet> (native_toggleAnimatorSet, JniHandleOwnership.DoNotTransfer);
			__this.IconToggleAnimatorSet = toggleAnimatorSet;
		}
#pragma warning restore 0169

		public virtual unsafe global::Android.Animation.AnimatorSet IconToggleAnimatorSet {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='getIconToggleAnimatorSet' and count(parameter)=0]"
			[Register ("getIconToggleAnimatorSet", "()Landroid/animation/AnimatorSet;", "GetGetIconToggleAnimatorSetHandler")]
			get {
				const string __id = "getIconToggleAnimatorSet.()Landroid/animation/AnimatorSet;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Android.Animation.AnimatorSet> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='setIconToggleAnimatorSet' and count(parameter)=1 and parameter[1][@type='android.animation.AnimatorSet']]"
			[Register ("setIconToggleAnimatorSet", "(Landroid/animation/AnimatorSet;)V", "GetSetIconToggleAnimatorSet_Landroid_animation_AnimatorSet_Handler")]
			set {
				const string __id = "setIconToggleAnimatorSet.(Landroid/animation/AnimatorSet;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((value == null) ? IntPtr.Zero : ((global::Java.Lang.Object) value).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (value);
				}
			}
		}

		static Delegate cb_isMenuButtonHidden;
#pragma warning disable 0169
		static Delegate GetIsMenuButtonHiddenHandler ()
		{
			if (cb_isMenuButtonHidden == null)
				cb_isMenuButtonHidden = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsMenuButtonHidden));
			return cb_isMenuButtonHidden;
		}

		static bool n_IsMenuButtonHidden (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.IsMenuButtonHidden;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsMenuButtonHidden {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='isMenuButtonHidden' and count(parameter)=0]"
			[Register ("isMenuButtonHidden", "()Z", "GetIsMenuButtonHiddenHandler")]
			get {
				const string __id = "isMenuButtonHidden.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate cb_isMenuHidden;
#pragma warning disable 0169
		static Delegate GetIsMenuHiddenHandler ()
		{
			if (cb_isMenuHidden == null)
				cb_isMenuHidden = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsMenuHidden));
			return cb_isMenuHidden;
		}

		static bool n_IsMenuHidden (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.IsMenuHidden;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsMenuHidden {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='isMenuHidden' and count(parameter)=0]"
			[Register ("isMenuHidden", "()Z", "GetIsMenuHiddenHandler")]
			get {
				const string __id = "isMenuHidden.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate cb_isOpened;
#pragma warning disable 0169
		static Delegate GetIsOpenedHandler ()
		{
			if (cb_isOpened == null)
				cb_isOpened = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsOpened));
			return cb_isOpened;
		}

		static bool n_IsOpened (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.IsOpened;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsOpened {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='isOpened' and count(parameter)=0]"
			[Register ("isOpened", "()Z", "GetIsOpenedHandler")]
			get {
				const string __id = "isOpened.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate cb_getMenuButtonColorNormal;
#pragma warning disable 0169
		static Delegate GetGetMenuButtonColorNormalHandler ()
		{
			if (cb_getMenuButtonColorNormal == null)
				cb_getMenuButtonColorNormal = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetMenuButtonColorNormal));
			return cb_getMenuButtonColorNormal;
		}

		static int n_GetMenuButtonColorNormal (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.MenuButtonColorNormal;
		}
#pragma warning restore 0169

		static Delegate cb_setMenuButtonColorNormal_I;
#pragma warning disable 0169
		static Delegate GetSetMenuButtonColorNormal_IHandler ()
		{
			if (cb_setMenuButtonColorNormal_I == null)
				cb_setMenuButtonColorNormal_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetMenuButtonColorNormal_I));
			return cb_setMenuButtonColorNormal_I;
		}

		static void n_SetMenuButtonColorNormal_I (IntPtr jnienv, IntPtr native__this, int color)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.MenuButtonColorNormal = color;
		}
#pragma warning restore 0169

		public virtual unsafe int MenuButtonColorNormal {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='getMenuButtonColorNormal' and count(parameter)=0]"
			[Register ("getMenuButtonColorNormal", "()I", "GetGetMenuButtonColorNormalHandler")]
			get {
				const string __id = "getMenuButtonColorNormal.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='setMenuButtonColorNormal' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setMenuButtonColorNormal", "(I)V", "GetSetMenuButtonColorNormal_IHandler")]
			set {
				const string __id = "setMenuButtonColorNormal.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate cb_getMenuButtonColorPressed;
#pragma warning disable 0169
		static Delegate GetGetMenuButtonColorPressedHandler ()
		{
			if (cb_getMenuButtonColorPressed == null)
				cb_getMenuButtonColorPressed = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetMenuButtonColorPressed));
			return cb_getMenuButtonColorPressed;
		}

		static int n_GetMenuButtonColorPressed (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.MenuButtonColorPressed;
		}
#pragma warning restore 0169

		static Delegate cb_setMenuButtonColorPressed_I;
#pragma warning disable 0169
		static Delegate GetSetMenuButtonColorPressed_IHandler ()
		{
			if (cb_setMenuButtonColorPressed_I == null)
				cb_setMenuButtonColorPressed_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetMenuButtonColorPressed_I));
			return cb_setMenuButtonColorPressed_I;
		}

		static void n_SetMenuButtonColorPressed_I (IntPtr jnienv, IntPtr native__this, int color)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.MenuButtonColorPressed = color;
		}
#pragma warning restore 0169

		public virtual unsafe int MenuButtonColorPressed {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='getMenuButtonColorPressed' and count(parameter)=0]"
			[Register ("getMenuButtonColorPressed", "()I", "GetGetMenuButtonColorPressedHandler")]
			get {
				const string __id = "getMenuButtonColorPressed.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='setMenuButtonColorPressed' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setMenuButtonColorPressed", "(I)V", "GetSetMenuButtonColorPressed_IHandler")]
			set {
				const string __id = "setMenuButtonColorPressed.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate cb_getMenuButtonColorRipple;
#pragma warning disable 0169
		static Delegate GetGetMenuButtonColorRippleHandler ()
		{
			if (cb_getMenuButtonColorRipple == null)
				cb_getMenuButtonColorRipple = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetMenuButtonColorRipple));
			return cb_getMenuButtonColorRipple;
		}

		static int n_GetMenuButtonColorRipple (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.MenuButtonColorRipple;
		}
#pragma warning restore 0169

		static Delegate cb_setMenuButtonColorRipple_I;
#pragma warning disable 0169
		static Delegate GetSetMenuButtonColorRipple_IHandler ()
		{
			if (cb_setMenuButtonColorRipple_I == null)
				cb_setMenuButtonColorRipple_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetMenuButtonColorRipple_I));
			return cb_setMenuButtonColorRipple_I;
		}

		static void n_SetMenuButtonColorRipple_I (IntPtr jnienv, IntPtr native__this, int color)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.MenuButtonColorRipple = color;
		}
#pragma warning restore 0169

		public virtual unsafe int MenuButtonColorRipple {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='getMenuButtonColorRipple' and count(parameter)=0]"
			[Register ("getMenuButtonColorRipple", "()I", "GetGetMenuButtonColorRippleHandler")]
			get {
				const string __id = "getMenuButtonColorRipple.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='setMenuButtonColorRipple' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setMenuButtonColorRipple", "(I)V", "GetSetMenuButtonColorRipple_IHandler")]
			set {
				const string __id = "setMenuButtonColorRipple.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate cb_getMenuButtonLabelText;
#pragma warning disable 0169
		static Delegate GetGetMenuButtonLabelTextHandler ()
		{
			if (cb_getMenuButtonLabelText == null)
				cb_getMenuButtonLabelText = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetMenuButtonLabelText));
			return cb_getMenuButtonLabelText;
		}

		static IntPtr n_GetMenuButtonLabelText (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.NewString (__this.MenuButtonLabelText);
		}
#pragma warning restore 0169

		static Delegate cb_setMenuButtonLabelText_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetMenuButtonLabelText_Ljava_lang_String_Handler ()
		{
			if (cb_setMenuButtonLabelText_Ljava_lang_String_ == null)
				cb_setMenuButtonLabelText_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetMenuButtonLabelText_Ljava_lang_String_));
			return cb_setMenuButtonLabelText_Ljava_lang_String_;
		}

		static void n_SetMenuButtonLabelText_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_text)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var text = JNIEnv.GetString (native_text, JniHandleOwnership.DoNotTransfer);
			__this.MenuButtonLabelText = text;
		}
#pragma warning restore 0169

		public virtual unsafe string MenuButtonLabelText {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='getMenuButtonLabelText' and count(parameter)=0]"
			[Register ("getMenuButtonLabelText", "()Ljava/lang/String;", "GetGetMenuButtonLabelTextHandler")]
			get {
				const string __id = "getMenuButtonLabelText.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='setMenuButtonLabelText' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setMenuButtonLabelText", "(Ljava/lang/String;)V", "GetSetMenuButtonLabelText_Ljava_lang_String_Handler")]
			set {
				const string __id = "setMenuButtonLabelText.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static Delegate cb_getMenuIconView;
#pragma warning disable 0169
		static Delegate GetGetMenuIconViewHandler ()
		{
			if (cb_getMenuIconView == null)
				cb_getMenuIconView = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetMenuIconView));
			return cb_getMenuIconView;
		}

		static IntPtr n_GetMenuIconView (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.MenuIconView);
		}
#pragma warning restore 0169

		public virtual unsafe global::Android.Widget.ImageView MenuIconView {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='getMenuIconView' and count(parameter)=0]"
			[Register ("getMenuIconView", "()Landroid/widget/ImageView;", "GetGetMenuIconViewHandler")]
			get {
				const string __id = "getMenuIconView.()Landroid/widget/ImageView;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Android.Widget.ImageView> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_addMenuButton_Lcom_github_clans_fab_FloatingActionButton_;
#pragma warning disable 0169
		static Delegate GetAddMenuButton_Lcom_github_clans_fab_FloatingActionButton_Handler ()
		{
			if (cb_addMenuButton_Lcom_github_clans_fab_FloatingActionButton_ == null)
				cb_addMenuButton_Lcom_github_clans_fab_FloatingActionButton_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_AddMenuButton_Lcom_github_clans_fab_FloatingActionButton_));
			return cb_addMenuButton_Lcom_github_clans_fab_FloatingActionButton_;
		}

		static void n_AddMenuButton_Lcom_github_clans_fab_FloatingActionButton_ (IntPtr jnienv, IntPtr native__this, IntPtr native_fab)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var fab = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (native_fab, JniHandleOwnership.DoNotTransfer);
			__this.AddMenuButton (fab);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='addMenuButton' and count(parameter)=1 and parameter[1][@type='com.github.clans.fab.FloatingActionButton']]"
		[Register ("addMenuButton", "(Lcom/github/clans/fab/FloatingActionButton;)V", "GetAddMenuButton_Lcom_github_clans_fab_FloatingActionButton_Handler")]
		public virtual unsafe void AddMenuButton (global::Com.Github.Clans.Fab.FloatingActionButton fab)
		{
			const string __id = "addMenuButton.(Lcom/github/clans/fab/FloatingActionButton;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((fab == null) ? IntPtr.Zero : ((global::Java.Lang.Object) fab).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (fab);
			}
		}

		static Delegate cb_addMenuButton_Lcom_github_clans_fab_FloatingActionButton_I;
#pragma warning disable 0169
		static Delegate GetAddMenuButton_Lcom_github_clans_fab_FloatingActionButton_IHandler ()
		{
			if (cb_addMenuButton_Lcom_github_clans_fab_FloatingActionButton_I == null)
				cb_addMenuButton_Lcom_github_clans_fab_FloatingActionButton_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_V (n_AddMenuButton_Lcom_github_clans_fab_FloatingActionButton_I));
			return cb_addMenuButton_Lcom_github_clans_fab_FloatingActionButton_I;
		}

		static void n_AddMenuButton_Lcom_github_clans_fab_FloatingActionButton_I (IntPtr jnienv, IntPtr native__this, IntPtr native_fab, int index)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var fab = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (native_fab, JniHandleOwnership.DoNotTransfer);
			__this.AddMenuButton (fab, index);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='addMenuButton' and count(parameter)=2 and parameter[1][@type='com.github.clans.fab.FloatingActionButton'] and parameter[2][@type='int']]"
		[Register ("addMenuButton", "(Lcom/github/clans/fab/FloatingActionButton;I)V", "GetAddMenuButton_Lcom_github_clans_fab_FloatingActionButton_IHandler")]
		public virtual unsafe void AddMenuButton (global::Com.Github.Clans.Fab.FloatingActionButton fab, int index)
		{
			const string __id = "addMenuButton.(Lcom/github/clans/fab/FloatingActionButton;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((fab == null) ? IntPtr.Zero : ((global::Java.Lang.Object) fab).Handle);
				__args [1] = new JniArgumentValue (index);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (fab);
			}
		}

		static Delegate cb_close_Z;
#pragma warning disable 0169
		static Delegate GetClose_ZHandler ()
		{
			if (cb_close_Z == null)
				cb_close_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_Close_Z));
			return cb_close_Z;
		}

		static void n_Close_Z (IntPtr jnienv, IntPtr native__this, bool animate)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.Close (animate);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='close' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("close", "(Z)V", "GetClose_ZHandler")]
		public virtual unsafe void Close (bool animate)
		{
			const string __id = "close.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (animate);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_hideMenu_Z;
#pragma warning disable 0169
		static Delegate GetHideMenu_ZHandler ()
		{
			if (cb_hideMenu_Z == null)
				cb_hideMenu_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_HideMenu_Z));
			return cb_hideMenu_Z;
		}

		static void n_HideMenu_Z (IntPtr jnienv, IntPtr native__this, bool animate)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.HideMenu (animate);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='hideMenu' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("hideMenu", "(Z)V", "GetHideMenu_ZHandler")]
		public virtual unsafe void HideMenu (bool animate)
		{
			const string __id = "hideMenu.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (animate);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_hideMenuButton_Z;
#pragma warning disable 0169
		static Delegate GetHideMenuButton_ZHandler ()
		{
			if (cb_hideMenuButton_Z == null)
				cb_hideMenuButton_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_HideMenuButton_Z));
			return cb_hideMenuButton_Z;
		}

		static void n_HideMenuButton_Z (IntPtr jnienv, IntPtr native__this, bool animate)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.HideMenuButton (animate);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='hideMenuButton' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("hideMenuButton", "(Z)V", "GetHideMenuButton_ZHandler")]
		public virtual unsafe void HideMenuButton (bool animate)
		{
			const string __id = "hideMenuButton.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (animate);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_onLayout_ZIIII;
#pragma warning disable 0169
		static Delegate GetOnLayout_ZIIIIHandler ()
		{
			if (cb_onLayout_ZIIII == null)
				cb_onLayout_ZIIII = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZIIII_V (n_OnLayout_ZIIII));
			return cb_onLayout_ZIIII;
		}

		static void n_OnLayout_ZIIII (IntPtr jnienv, IntPtr native__this, bool changed, int l, int t, int r, int b)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.OnLayout (changed, l, t, r, b);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='onLayout' and count(parameter)=5 and parameter[1][@type='boolean'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int']]"
		[Register ("onLayout", "(ZIIII)V", "GetOnLayout_ZIIIIHandler")]
		protected override unsafe void OnLayout (bool changed, int l, int t, int r, int b)
		{
			const string __id = "onLayout.(ZIIII)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (changed);
				__args [1] = new JniArgumentValue (l);
				__args [2] = new JniArgumentValue (t);
				__args [3] = new JniArgumentValue (r);
				__args [4] = new JniArgumentValue (b);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_open_Z;
#pragma warning disable 0169
		static Delegate GetOpen_ZHandler ()
		{
			if (cb_open_Z == null)
				cb_open_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_Open_Z));
			return cb_open_Z;
		}

		static void n_Open_Z (IntPtr jnienv, IntPtr native__this, bool animate)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.Open (animate);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='open' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("open", "(Z)V", "GetOpen_ZHandler")]
		public virtual unsafe void Open (bool animate)
		{
			const string __id = "open.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (animate);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_removeAllMenuButtons;
#pragma warning disable 0169
		static Delegate GetRemoveAllMenuButtonsHandler ()
		{
			if (cb_removeAllMenuButtons == null)
				cb_removeAllMenuButtons = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_RemoveAllMenuButtons));
			return cb_removeAllMenuButtons;
		}

		static void n_RemoveAllMenuButtons (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.RemoveAllMenuButtons ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='removeAllMenuButtons' and count(parameter)=0]"
		[Register ("removeAllMenuButtons", "()V", "GetRemoveAllMenuButtonsHandler")]
		public virtual unsafe void RemoveAllMenuButtons ()
		{
			const string __id = "removeAllMenuButtons.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_removeMenuButton_Lcom_github_clans_fab_FloatingActionButton_;
#pragma warning disable 0169
		static Delegate GetRemoveMenuButton_Lcom_github_clans_fab_FloatingActionButton_Handler ()
		{
			if (cb_removeMenuButton_Lcom_github_clans_fab_FloatingActionButton_ == null)
				cb_removeMenuButton_Lcom_github_clans_fab_FloatingActionButton_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_RemoveMenuButton_Lcom_github_clans_fab_FloatingActionButton_));
			return cb_removeMenuButton_Lcom_github_clans_fab_FloatingActionButton_;
		}

		static void n_RemoveMenuButton_Lcom_github_clans_fab_FloatingActionButton_ (IntPtr jnienv, IntPtr native__this, IntPtr native_fab)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var fab = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionButton> (native_fab, JniHandleOwnership.DoNotTransfer);
			__this.RemoveMenuButton (fab);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='removeMenuButton' and count(parameter)=1 and parameter[1][@type='com.github.clans.fab.FloatingActionButton']]"
		[Register ("removeMenuButton", "(Lcom/github/clans/fab/FloatingActionButton;)V", "GetRemoveMenuButton_Lcom_github_clans_fab_FloatingActionButton_Handler")]
		public virtual unsafe void RemoveMenuButton (global::Com.Github.Clans.Fab.FloatingActionButton fab)
		{
			const string __id = "removeMenuButton.(Lcom/github/clans/fab/FloatingActionButton;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((fab == null) ? IntPtr.Zero : ((global::Java.Lang.Object) fab).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (fab);
			}
		}

		static Delegate cb_setClosedOnTouchOutside_Z;
#pragma warning disable 0169
		static Delegate GetSetClosedOnTouchOutside_ZHandler ()
		{
			if (cb_setClosedOnTouchOutside_Z == null)
				cb_setClosedOnTouchOutside_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetClosedOnTouchOutside_Z));
			return cb_setClosedOnTouchOutside_Z;
		}

		static void n_SetClosedOnTouchOutside_Z (IntPtr jnienv, IntPtr native__this, bool close)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetClosedOnTouchOutside (close);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='setClosedOnTouchOutside' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("setClosedOnTouchOutside", "(Z)V", "GetSetClosedOnTouchOutside_ZHandler")]
		public virtual unsafe void SetClosedOnTouchOutside (bool close)
		{
			const string __id = "setClosedOnTouchOutside.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (close);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setIconAnimationCloseInterpolator_Landroid_view_animation_Interpolator_;
#pragma warning disable 0169
		static Delegate GetSetIconAnimationCloseInterpolator_Landroid_view_animation_Interpolator_Handler ()
		{
			if (cb_setIconAnimationCloseInterpolator_Landroid_view_animation_Interpolator_ == null)
				cb_setIconAnimationCloseInterpolator_Landroid_view_animation_Interpolator_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetIconAnimationCloseInterpolator_Landroid_view_animation_Interpolator_));
			return cb_setIconAnimationCloseInterpolator_Landroid_view_animation_Interpolator_;
		}

		static void n_SetIconAnimationCloseInterpolator_Landroid_view_animation_Interpolator_ (IntPtr jnienv, IntPtr native__this, IntPtr native_closeInterpolator)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var closeInterpolator = (global::Android.Views.Animations.IInterpolator)global::Java.Lang.Object.GetObject<global::Android.Views.Animations.IInterpolator> (native_closeInterpolator, JniHandleOwnership.DoNotTransfer);
			__this.SetIconAnimationCloseInterpolator (closeInterpolator);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='setIconAnimationCloseInterpolator' and count(parameter)=1 and parameter[1][@type='android.view.animation.Interpolator']]"
		[Register ("setIconAnimationCloseInterpolator", "(Landroid/view/animation/Interpolator;)V", "GetSetIconAnimationCloseInterpolator_Landroid_view_animation_Interpolator_Handler")]
		public virtual unsafe void SetIconAnimationCloseInterpolator (global::Android.Views.Animations.IInterpolator closeInterpolator)
		{
			const string __id = "setIconAnimationCloseInterpolator.(Landroid/view/animation/Interpolator;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((closeInterpolator == null) ? IntPtr.Zero : ((global::Java.Lang.Object) closeInterpolator).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (closeInterpolator);
			}
		}

		static Delegate cb_setIconAnimationInterpolator_Landroid_view_animation_Interpolator_;
#pragma warning disable 0169
		static Delegate GetSetIconAnimationInterpolator_Landroid_view_animation_Interpolator_Handler ()
		{
			if (cb_setIconAnimationInterpolator_Landroid_view_animation_Interpolator_ == null)
				cb_setIconAnimationInterpolator_Landroid_view_animation_Interpolator_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetIconAnimationInterpolator_Landroid_view_animation_Interpolator_));
			return cb_setIconAnimationInterpolator_Landroid_view_animation_Interpolator_;
		}

		static void n_SetIconAnimationInterpolator_Landroid_view_animation_Interpolator_ (IntPtr jnienv, IntPtr native__this, IntPtr native_interpolator)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var interpolator = (global::Android.Views.Animations.IInterpolator)global::Java.Lang.Object.GetObject<global::Android.Views.Animations.IInterpolator> (native_interpolator, JniHandleOwnership.DoNotTransfer);
			__this.SetIconAnimationInterpolator (interpolator);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='setIconAnimationInterpolator' and count(parameter)=1 and parameter[1][@type='android.view.animation.Interpolator']]"
		[Register ("setIconAnimationInterpolator", "(Landroid/view/animation/Interpolator;)V", "GetSetIconAnimationInterpolator_Landroid_view_animation_Interpolator_Handler")]
		public virtual unsafe void SetIconAnimationInterpolator (global::Android.Views.Animations.IInterpolator interpolator)
		{
			const string __id = "setIconAnimationInterpolator.(Landroid/view/animation/Interpolator;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((interpolator == null) ? IntPtr.Zero : ((global::Java.Lang.Object) interpolator).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (interpolator);
			}
		}

		static Delegate cb_setIconAnimationOpenInterpolator_Landroid_view_animation_Interpolator_;
#pragma warning disable 0169
		static Delegate GetSetIconAnimationOpenInterpolator_Landroid_view_animation_Interpolator_Handler ()
		{
			if (cb_setIconAnimationOpenInterpolator_Landroid_view_animation_Interpolator_ == null)
				cb_setIconAnimationOpenInterpolator_Landroid_view_animation_Interpolator_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetIconAnimationOpenInterpolator_Landroid_view_animation_Interpolator_));
			return cb_setIconAnimationOpenInterpolator_Landroid_view_animation_Interpolator_;
		}

		static void n_SetIconAnimationOpenInterpolator_Landroid_view_animation_Interpolator_ (IntPtr jnienv, IntPtr native__this, IntPtr native_openInterpolator)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var openInterpolator = (global::Android.Views.Animations.IInterpolator)global::Java.Lang.Object.GetObject<global::Android.Views.Animations.IInterpolator> (native_openInterpolator, JniHandleOwnership.DoNotTransfer);
			__this.SetIconAnimationOpenInterpolator (openInterpolator);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='setIconAnimationOpenInterpolator' and count(parameter)=1 and parameter[1][@type='android.view.animation.Interpolator']]"
		[Register ("setIconAnimationOpenInterpolator", "(Landroid/view/animation/Interpolator;)V", "GetSetIconAnimationOpenInterpolator_Landroid_view_animation_Interpolator_Handler")]
		public virtual unsafe void SetIconAnimationOpenInterpolator (global::Android.Views.Animations.IInterpolator openInterpolator)
		{
			const string __id = "setIconAnimationOpenInterpolator.(Landroid/view/animation/Interpolator;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((openInterpolator == null) ? IntPtr.Zero : ((global::Java.Lang.Object) openInterpolator).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (openInterpolator);
			}
		}

		static Delegate cb_setMenuButtonColorNormalResId_I;
#pragma warning disable 0169
		static Delegate GetSetMenuButtonColorNormalResId_IHandler ()
		{
			if (cb_setMenuButtonColorNormalResId_I == null)
				cb_setMenuButtonColorNormalResId_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetMenuButtonColorNormalResId_I));
			return cb_setMenuButtonColorNormalResId_I;
		}

		static void n_SetMenuButtonColorNormalResId_I (IntPtr jnienv, IntPtr native__this, int colorResId)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetMenuButtonColorNormalResId (colorResId);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='setMenuButtonColorNormalResId' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setMenuButtonColorNormalResId", "(I)V", "GetSetMenuButtonColorNormalResId_IHandler")]
		public virtual unsafe void SetMenuButtonColorNormalResId (int colorResId)
		{
			const string __id = "setMenuButtonColorNormalResId.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (colorResId);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setMenuButtonColorPressedResId_I;
#pragma warning disable 0169
		static Delegate GetSetMenuButtonColorPressedResId_IHandler ()
		{
			if (cb_setMenuButtonColorPressedResId_I == null)
				cb_setMenuButtonColorPressedResId_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetMenuButtonColorPressedResId_I));
			return cb_setMenuButtonColorPressedResId_I;
		}

		static void n_SetMenuButtonColorPressedResId_I (IntPtr jnienv, IntPtr native__this, int colorResId)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetMenuButtonColorPressedResId (colorResId);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='setMenuButtonColorPressedResId' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setMenuButtonColorPressedResId", "(I)V", "GetSetMenuButtonColorPressedResId_IHandler")]
		public virtual unsafe void SetMenuButtonColorPressedResId (int colorResId)
		{
			const string __id = "setMenuButtonColorPressedResId.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (colorResId);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setMenuButtonColorRippleResId_I;
#pragma warning disable 0169
		static Delegate GetSetMenuButtonColorRippleResId_IHandler ()
		{
			if (cb_setMenuButtonColorRippleResId_I == null)
				cb_setMenuButtonColorRippleResId_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetMenuButtonColorRippleResId_I));
			return cb_setMenuButtonColorRippleResId_I;
		}

		static void n_SetMenuButtonColorRippleResId_I (IntPtr jnienv, IntPtr native__this, int colorResId)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetMenuButtonColorRippleResId (colorResId);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='setMenuButtonColorRippleResId' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setMenuButtonColorRippleResId", "(I)V", "GetSetMenuButtonColorRippleResId_IHandler")]
		public virtual unsafe void SetMenuButtonColorRippleResId (int colorResId)
		{
			const string __id = "setMenuButtonColorRippleResId.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (colorResId);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setMenuButtonHideAnimation_Landroid_view_animation_Animation_;
#pragma warning disable 0169
		static Delegate GetSetMenuButtonHideAnimation_Landroid_view_animation_Animation_Handler ()
		{
			if (cb_setMenuButtonHideAnimation_Landroid_view_animation_Animation_ == null)
				cb_setMenuButtonHideAnimation_Landroid_view_animation_Animation_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetMenuButtonHideAnimation_Landroid_view_animation_Animation_));
			return cb_setMenuButtonHideAnimation_Landroid_view_animation_Animation_;
		}

		static void n_SetMenuButtonHideAnimation_Landroid_view_animation_Animation_ (IntPtr jnienv, IntPtr native__this, IntPtr native_hideAnimation)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var hideAnimation = global::Java.Lang.Object.GetObject<global::Android.Views.Animations.Animation> (native_hideAnimation, JniHandleOwnership.DoNotTransfer);
			__this.SetMenuButtonHideAnimation (hideAnimation);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='setMenuButtonHideAnimation' and count(parameter)=1 and parameter[1][@type='android.view.animation.Animation']]"
		[Register ("setMenuButtonHideAnimation", "(Landroid/view/animation/Animation;)V", "GetSetMenuButtonHideAnimation_Landroid_view_animation_Animation_Handler")]
		public virtual unsafe void SetMenuButtonHideAnimation (global::Android.Views.Animations.Animation hideAnimation)
		{
			const string __id = "setMenuButtonHideAnimation.(Landroid/view/animation/Animation;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((hideAnimation == null) ? IntPtr.Zero : ((global::Java.Lang.Object) hideAnimation).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (hideAnimation);
			}
		}

		static Delegate cb_setMenuButtonShowAnimation_Landroid_view_animation_Animation_;
#pragma warning disable 0169
		static Delegate GetSetMenuButtonShowAnimation_Landroid_view_animation_Animation_Handler ()
		{
			if (cb_setMenuButtonShowAnimation_Landroid_view_animation_Animation_ == null)
				cb_setMenuButtonShowAnimation_Landroid_view_animation_Animation_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetMenuButtonShowAnimation_Landroid_view_animation_Animation_));
			return cb_setMenuButtonShowAnimation_Landroid_view_animation_Animation_;
		}

		static void n_SetMenuButtonShowAnimation_Landroid_view_animation_Animation_ (IntPtr jnienv, IntPtr native__this, IntPtr native_showAnimation)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var showAnimation = global::Java.Lang.Object.GetObject<global::Android.Views.Animations.Animation> (native_showAnimation, JniHandleOwnership.DoNotTransfer);
			__this.SetMenuButtonShowAnimation (showAnimation);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='setMenuButtonShowAnimation' and count(parameter)=1 and parameter[1][@type='android.view.animation.Animation']]"
		[Register ("setMenuButtonShowAnimation", "(Landroid/view/animation/Animation;)V", "GetSetMenuButtonShowAnimation_Landroid_view_animation_Animation_Handler")]
		public virtual unsafe void SetMenuButtonShowAnimation (global::Android.Views.Animations.Animation showAnimation)
		{
			const string __id = "setMenuButtonShowAnimation.(Landroid/view/animation/Animation;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((showAnimation == null) ? IntPtr.Zero : ((global::Java.Lang.Object) showAnimation).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (showAnimation);
			}
		}

		static Delegate cb_setOnMenuButtonClickListener_Landroid_view_View_OnClickListener_;
#pragma warning disable 0169
		static Delegate GetSetOnMenuButtonClickListener_Landroid_view_View_OnClickListener_Handler ()
		{
			if (cb_setOnMenuButtonClickListener_Landroid_view_View_OnClickListener_ == null)
				cb_setOnMenuButtonClickListener_Landroid_view_View_OnClickListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetOnMenuButtonClickListener_Landroid_view_View_OnClickListener_));
			return cb_setOnMenuButtonClickListener_Landroid_view_View_OnClickListener_;
		}

		static void n_SetOnMenuButtonClickListener_Landroid_view_View_OnClickListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_clickListener)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var clickListener = (global::Android.Views.View.IOnClickListener)global::Java.Lang.Object.GetObject<global::Android.Views.View.IOnClickListener> (native_clickListener, JniHandleOwnership.DoNotTransfer);
			__this.SetOnMenuButtonClickListener (clickListener);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='setOnMenuButtonClickListener' and count(parameter)=1 and parameter[1][@type='android.view.View.OnClickListener']]"
		[Register ("setOnMenuButtonClickListener", "(Landroid/view/View$OnClickListener;)V", "GetSetOnMenuButtonClickListener_Landroid_view_View_OnClickListener_Handler")]
		public virtual unsafe void SetOnMenuButtonClickListener (global::Android.Views.View.IOnClickListener clickListener)
		{
			const string __id = "setOnMenuButtonClickListener.(Landroid/view/View$OnClickListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((clickListener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) clickListener).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (clickListener);
			}
		}

		static Delegate cb_setOnMenuButtonLongClickListener_Landroid_view_View_OnLongClickListener_;
#pragma warning disable 0169
		static Delegate GetSetOnMenuButtonLongClickListener_Landroid_view_View_OnLongClickListener_Handler ()
		{
			if (cb_setOnMenuButtonLongClickListener_Landroid_view_View_OnLongClickListener_ == null)
				cb_setOnMenuButtonLongClickListener_Landroid_view_View_OnLongClickListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetOnMenuButtonLongClickListener_Landroid_view_View_OnLongClickListener_));
			return cb_setOnMenuButtonLongClickListener_Landroid_view_View_OnLongClickListener_;
		}

		static void n_SetOnMenuButtonLongClickListener_Landroid_view_View_OnLongClickListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_longClickListener)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var longClickListener = (global::Android.Views.View.IOnLongClickListener)global::Java.Lang.Object.GetObject<global::Android.Views.View.IOnLongClickListener> (native_longClickListener, JniHandleOwnership.DoNotTransfer);
			__this.SetOnMenuButtonLongClickListener (longClickListener);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='setOnMenuButtonLongClickListener' and count(parameter)=1 and parameter[1][@type='android.view.View.OnLongClickListener']]"
		[Register ("setOnMenuButtonLongClickListener", "(Landroid/view/View$OnLongClickListener;)V", "GetSetOnMenuButtonLongClickListener_Landroid_view_View_OnLongClickListener_Handler")]
		public virtual unsafe void SetOnMenuButtonLongClickListener (global::Android.Views.View.IOnLongClickListener longClickListener)
		{
			const string __id = "setOnMenuButtonLongClickListener.(Landroid/view/View$OnLongClickListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((longClickListener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) longClickListener).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (longClickListener);
			}
		}

		static Delegate cb_setOnMenuToggleListener_Lcom_github_clans_fab_FloatingActionMenu_OnMenuToggleListener_;
#pragma warning disable 0169
		static Delegate GetSetOnMenuToggleListener_Lcom_github_clans_fab_FloatingActionMenu_OnMenuToggleListener_Handler ()
		{
			if (cb_setOnMenuToggleListener_Lcom_github_clans_fab_FloatingActionMenu_OnMenuToggleListener_ == null)
				cb_setOnMenuToggleListener_Lcom_github_clans_fab_FloatingActionMenu_OnMenuToggleListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetOnMenuToggleListener_Lcom_github_clans_fab_FloatingActionMenu_OnMenuToggleListener_));
			return cb_setOnMenuToggleListener_Lcom_github_clans_fab_FloatingActionMenu_OnMenuToggleListener_;
		}

		static void n_SetOnMenuToggleListener_Lcom_github_clans_fab_FloatingActionMenu_OnMenuToggleListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_listener)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var listener = (global::Com.Github.Clans.Fab.FloatingActionMenu.IOnMenuToggleListener)global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu.IOnMenuToggleListener> (native_listener, JniHandleOwnership.DoNotTransfer);
			__this.SetOnMenuToggleListener (listener);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='setOnMenuToggleListener' and count(parameter)=1 and parameter[1][@type='com.github.clans.fab.FloatingActionMenu.OnMenuToggleListener']]"
		[Register ("setOnMenuToggleListener", "(Lcom/github/clans/fab/FloatingActionMenu$OnMenuToggleListener;)V", "GetSetOnMenuToggleListener_Lcom_github_clans_fab_FloatingActionMenu_OnMenuToggleListener_Handler")]
		public virtual unsafe void SetOnMenuToggleListener (global::Com.Github.Clans.Fab.FloatingActionMenu.IOnMenuToggleListener listener)
		{
			const string __id = "setOnMenuToggleListener.(Lcom/github/clans/fab/FloatingActionMenu$OnMenuToggleListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((listener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) listener).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (listener);
			}
		}

		static Delegate cb_showMenu_Z;
#pragma warning disable 0169
		static Delegate GetShowMenu_ZHandler ()
		{
			if (cb_showMenu_Z == null)
				cb_showMenu_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_ShowMenu_Z));
			return cb_showMenu_Z;
		}

		static void n_ShowMenu_Z (IntPtr jnienv, IntPtr native__this, bool animate)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.ShowMenu (animate);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='showMenu' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("showMenu", "(Z)V", "GetShowMenu_ZHandler")]
		public virtual unsafe void ShowMenu (bool animate)
		{
			const string __id = "showMenu.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (animate);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_showMenuButton_Z;
#pragma warning disable 0169
		static Delegate GetShowMenuButton_ZHandler ()
		{
			if (cb_showMenuButton_Z == null)
				cb_showMenuButton_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_ShowMenuButton_Z));
			return cb_showMenuButton_Z;
		}

		static void n_ShowMenuButton_Z (IntPtr jnienv, IntPtr native__this, bool animate)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.ShowMenuButton (animate);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='showMenuButton' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("showMenuButton", "(Z)V", "GetShowMenuButton_ZHandler")]
		public virtual unsafe void ShowMenuButton (bool animate)
		{
			const string __id = "showMenuButton.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (animate);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_toggle_Z;
#pragma warning disable 0169
		static Delegate GetToggle_ZHandler ()
		{
			if (cb_toggle_Z == null)
				cb_toggle_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_Toggle_Z));
			return cb_toggle_Z;
		}

		static void n_Toggle_Z (IntPtr jnienv, IntPtr native__this, bool animate)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.Toggle (animate);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='toggle' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("toggle", "(Z)V", "GetToggle_ZHandler")]
		public virtual unsafe void Toggle (bool animate)
		{
			const string __id = "toggle.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (animate);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_toggleMenu_Z;
#pragma warning disable 0169
		static Delegate GetToggleMenu_ZHandler ()
		{
			if (cb_toggleMenu_Z == null)
				cb_toggleMenu_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_ToggleMenu_Z));
			return cb_toggleMenu_Z;
		}

		static void n_ToggleMenu_Z (IntPtr jnienv, IntPtr native__this, bool animate)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.ToggleMenu (animate);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='toggleMenu' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("toggleMenu", "(Z)V", "GetToggleMenu_ZHandler")]
		public virtual unsafe void ToggleMenu (bool animate)
		{
			const string __id = "toggleMenu.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (animate);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_toggleMenuButton_Z;
#pragma warning disable 0169
		static Delegate GetToggleMenuButton_ZHandler ()
		{
			if (cb_toggleMenuButton_Z == null)
				cb_toggleMenuButton_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_ToggleMenuButton_Z));
			return cb_toggleMenuButton_Z;
		}

		static void n_ToggleMenuButton_Z (IntPtr jnienv, IntPtr native__this, bool animate)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Github.Clans.Fab.FloatingActionMenu> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.ToggleMenuButton (animate);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.github.clans.fab']/class[@name='FloatingActionMenu']/method[@name='toggleMenuButton' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("toggleMenuButton", "(Z)V", "GetToggleMenuButton_ZHandler")]
		public virtual unsafe void ToggleMenuButton (bool animate)
		{
			const string __id = "toggleMenuButton.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (animate);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		#region "Event implementation for Com.Github.Clans.Fab.FloatingActionMenu.IOnMenuToggleListener"

		public event EventHandler<global::Com.Github.Clans.Fab.FloatingActionMenu.MenuToggleEventArgs> MenuToggle {
			add {
				global::Java.Interop.EventHelper.AddEventHandler<global::Com.Github.Clans.Fab.FloatingActionMenu.IOnMenuToggleListener, global::Com.Github.Clans.Fab.FloatingActionMenu.IOnMenuToggleListenerImplementor>(
				ref weak_implementor_SetOnMenuToggleListener,
				__CreateIOnMenuToggleListenerImplementor,
				SetOnMenuToggleListener,
				__h => __h.Handler += value);
			}
			remove {
				global::Java.Interop.EventHelper.RemoveEventHandler<global::Com.Github.Clans.Fab.FloatingActionMenu.IOnMenuToggleListener, global::Com.Github.Clans.Fab.FloatingActionMenu.IOnMenuToggleListenerImplementor>(
				ref weak_implementor_SetOnMenuToggleListener,
				global::Com.Github.Clans.Fab.FloatingActionMenu.IOnMenuToggleListenerImplementor.__IsEmpty,
				__v => SetOnMenuToggleListener (null),
				__h => __h.Handler -= value);
			}
		}

		WeakReference weak_implementor_SetOnMenuToggleListener;

		global::Com.Github.Clans.Fab.FloatingActionMenu.IOnMenuToggleListenerImplementor __CreateIOnMenuToggleListenerImplementor ()
		{
			return new global::Com.Github.Clans.Fab.FloatingActionMenu.IOnMenuToggleListenerImplementor (this);
		}

		#endregion

	}
}
