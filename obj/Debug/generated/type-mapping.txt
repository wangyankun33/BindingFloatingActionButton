com/github/clans/fab/BuildConfig = Com.Github.Clans.Fab.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
com/github/clans/fab/FloatingActionButton = Com.Github.Clans.Fab.FloatingActionButton
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;II)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int, int)
  SIZE_MINI = SizeMini
  SIZE_NORMAL = SizeNormal
  getButtonSize()I = ButtonSize
  setButtonSize(I)V = ButtonSize
  getColorDisabled()I = ColorDisabled
  setColorDisabled(I)V = ColorDisabled
  getColorNormal()I = ColorNormal
  setColorNormal(I)V = ColorNormal
  getColorPressed()I = ColorPressed
  setColorPressed(I)V = ColorPressed
  getColorRipple()I = ColorRipple
  setColorRipple(I)V = ColorRipple
  hasShadow()Z = HasShadow
  getIconDrawable()Landroid/graphics/drawable/Drawable; = IconDrawable
  isHidden()Z = IsHidden
  isProgressBackgroundShown()Z = IsProgressBackgroundShown
  getLabelText()Ljava/lang/String; = LabelText
  setLabelText(Ljava/lang/String;)V = LabelText
  getLabelVisibility()I = LabelVisibility
  setLabelVisibility(I)V = LabelVisibility
  getMax()I = Max
  setMax(I)V = Max
  getProgress()I = Progress
  getShadowColor()I = ShadowColor
  setShadowColor(I)V = ShadowColor
  getShadowRadius()I = ShadowRadius
  setShadowRadius(I)V = ShadowRadius
  getShadowXOffset()I = ShadowXOffset
  setShadowXOffset(I)V = ShadowXOffset
  getShadowYOffset()I = ShadowYOffset
  setShadowYOffset(I)V = ShadowYOffset
  hide(Z)V = Hide(bool)
  hideButtonInMenu(Z)V = HideButtonInMenu(bool)
  hideProgress()V = HideProgress()
  onRestoreInstanceState(Landroid/os/Parcelable;)V = OnRestoreInstanceState(Android.OS.IParcelable)
  onSaveInstanceState()Landroid/os/Parcelable; = OnSaveInstanceState()
  setColorDisabledResId(I)V = SetColorDisabledResId(int)
  setColorNormalResId(I)V = SetColorNormalResId(int)
  setColorPressedResId(I)V = SetColorPressedResId(int)
  setColorRippleResId(I)V = SetColorRippleResId(int)
  setElevationCompat(F)V = SetElevationCompat(float)
  setHideAnimation(Landroid/view/animation/Animation;)V = SetHideAnimation(Android.Views.Animations.Animation)
  setIndeterminate(Z)V = SetIndeterminate(bool)
  setLabelColors(III)V = SetLabelColors(int, int, int)
  setLabelTextColor(Landroid/content/res/ColorStateList;)V = SetLabelTextColor(Android.Content.Res.ColorStateList)
  setLabelTextColor(I)V = SetLabelTextColor(int)
  setProgress(IZ)V = SetProgress(int, bool)
  setShadowColorResource(I)V = SetShadowColorResource(int)
  setShadowRadius(F)V = SetShadowRadius(float)
  setShadowXOffset(F)V = SetShadowXOffset(float)
  setShadowYOffset(F)V = SetShadowYOffset(float)
  setShowAnimation(Landroid/view/animation/Animation;)V = SetShowAnimation(Android.Views.Animations.Animation)
  setShowProgressBackground(Z)V = SetShowProgressBackground(bool)
  setShowShadow(Z)V = SetShowShadow(bool)
  show(Z)V = Show(bool)
  showButtonInMenu(Z)V = ShowButtonInMenu(bool)
  toggle(Z)V = Toggle(bool)
com/github/clans/fab/FloatingActionMenu = Com.Github.Clans.Fab.FloatingActionMenu
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int)
  isAnimated()Z = Animated
  setAnimated(Z)V = Animated
  getAnimationDelayPerItem()I = AnimationDelayPerItem
  setAnimationDelayPerItem(I)V = AnimationDelayPerItem
  isIconAnimated()Z = IconAnimated
  setIconAnimated(Z)V = IconAnimated
  getIconToggleAnimatorSet()Landroid/animation/AnimatorSet; = IconToggleAnimatorSet
  setIconToggleAnimatorSet(Landroid/animation/AnimatorSet;)V = IconToggleAnimatorSet
  isMenuButtonHidden()Z = IsMenuButtonHidden
  isMenuHidden()Z = IsMenuHidden
  isOpened()Z = IsOpened
  getMenuButtonColorNormal()I = MenuButtonColorNormal
  setMenuButtonColorNormal(I)V = MenuButtonColorNormal
  getMenuButtonColorPressed()I = MenuButtonColorPressed
  setMenuButtonColorPressed(I)V = MenuButtonColorPressed
  getMenuButtonColorRipple()I = MenuButtonColorRipple
  setMenuButtonColorRipple(I)V = MenuButtonColorRipple
  getMenuButtonLabelText()Ljava/lang/String; = MenuButtonLabelText
  setMenuButtonLabelText(Ljava/lang/String;)V = MenuButtonLabelText
  getMenuIconView()Landroid/widget/ImageView; = MenuIconView
  addMenuButton(Lcom/github/clans/fab/FloatingActionButton;)V = AddMenuButton(Com.Github.Clans.Fab.FloatingActionButton)
  addMenuButton(Lcom/github/clans/fab/FloatingActionButton;I)V = AddMenuButton(Com.Github.Clans.Fab.FloatingActionButton, int)
  close(Z)V = Close(bool)
  hideMenu(Z)V = HideMenu(bool)
  hideMenuButton(Z)V = HideMenuButton(bool)
  onLayout(ZIIII)V = OnLayout(bool, int, int, int, int)
  open(Z)V = Open(bool)
  removeAllMenuButtons()V = RemoveAllMenuButtons()
  removeMenuButton(Lcom/github/clans/fab/FloatingActionButton;)V = RemoveMenuButton(Com.Github.Clans.Fab.FloatingActionButton)
  setClosedOnTouchOutside(Z)V = SetClosedOnTouchOutside(bool)
  setIconAnimationCloseInterpolator(Landroid/view/animation/Interpolator;)V = SetIconAnimationCloseInterpolator(Android.Views.Animations.IInterpolator)
  setIconAnimationInterpolator(Landroid/view/animation/Interpolator;)V = SetIconAnimationInterpolator(Android.Views.Animations.IInterpolator)
  setIconAnimationOpenInterpolator(Landroid/view/animation/Interpolator;)V = SetIconAnimationOpenInterpolator(Android.Views.Animations.IInterpolator)
  setMenuButtonColorNormalResId(I)V = SetMenuButtonColorNormalResId(int)
  setMenuButtonColorPressedResId(I)V = SetMenuButtonColorPressedResId(int)
  setMenuButtonColorRippleResId(I)V = SetMenuButtonColorRippleResId(int)
  setMenuButtonHideAnimation(Landroid/view/animation/Animation;)V = SetMenuButtonHideAnimation(Android.Views.Animations.Animation)
  setMenuButtonShowAnimation(Landroid/view/animation/Animation;)V = SetMenuButtonShowAnimation(Android.Views.Animations.Animation)
  setOnMenuButtonClickListener(Landroid/view/View$OnClickListener;)V = SetOnMenuButtonClickListener(Android.Views.View.IOnClickListener)
  setOnMenuButtonLongClickListener(Landroid/view/View$OnLongClickListener;)V = SetOnMenuButtonLongClickListener(Android.Views.View.IOnLongClickListener)
  setOnMenuToggleListener(Lcom/github/clans/fab/FloatingActionMenu$OnMenuToggleListener;)V = SetOnMenuToggleListener(Com.Github.Clans.Fab.FloatingActionMenu.IOnMenuToggleListener)
  showMenu(Z)V = ShowMenu(bool)
  showMenuButton(Z)V = ShowMenuButton(bool)
  toggle(Z)V = Toggle(bool)
  toggleMenu(Z)V = ToggleMenu(bool)
  toggleMenuButton(Z)V = ToggleMenuButton(bool)
com/github/clans/fab/Label = Com.Github.Clans.Fab.Label
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int)
